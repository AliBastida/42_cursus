int check_left(t_game *game)
{
    {
        if (game->map[game->player_y][game->player_x] == '0')
        {
            printf("nueva posición: game->player_y %d y game->player_x-1 %d \n", game->player_y, game->player_x-1);
            game->map[game->player_y][game->player_x-1] = 'P';
            game->map[game->player_y][game->player_x] = '0';
            printf("nueva posición: game->player_y %d y game->player_x-1 %d \n", game->player_y, game->player_x-1);
            return (1);
        }
        else if  ((game->map[game->player_y][game->player_x - 1] == '1') || ((game->map[game->player_y][game->player_x - 1] == 'E') && (game->there_is_c != 0)))
            {
                printf("pared\n");
                return (0);
            }

        else if (game->map[game->player_y][game->player_x - 1] == 'C')
        {
            game->there_is_c--;
            game->map[game->player_y][game->player_x] = '0';
            game->map[game->player_y][game->player_x--] = 'P';
        }
        else if ((game->map[game->player_y][game->player_x - 1] == 'E') && (game->there_is_c == 0))
            write(1, "GAME OVER", 9);
    }
    return (0);
}

int check_right(t_game *game)
{
   while (game->map[game->player_y][game->player_x])
    {
        if (game->map[game->player_y][game->player_x + 1] == '0')
        {
            printf("nueva posición: game->player_x %d y game->player_x+1 %d \n", game->player_x, game->player_x+1);
            game->map[game->player_y][game->player_x] = '0';
            game->map[game->player_y][game->player_x++] = 'P';
            printf("nueva posición: game->player_x %d y game->player_x+1 %d \n", game->player_x, game->player_x+1);
            return (1);
        }
        else if  ((game->map[game->player_y][game->player_x + 1] == '1') || ((game->map[game->player_y][game->player_x + 1] == 'E') && (game->there_is_c != 0)))
        {
            printf("pared\n");
            return (0);
        }
        else if (game->map[game->player_y][game->player_x + 1] == 'C')
        {
            game->there_is_c--;
            game->map[game->player_y][game->player_x] = '0';
            game->map[game->player_y][game->player_x++] = 'P';
        }
        else if ((game->map[game->player_y][game->player_x + 1] == 'E') && (game->there_is_c == 0))
            write(1, "GAME OVER", 9);
    }
    return (0);
}

int check_up(t_game *game)
{ while (game->map[game->player_y][game->player_x])
    {
        if (game->map[game->player_y-1][game->player_x] == '0')
        {
            printf("nueva posición: game->player_y %d y game->player_y-1 %d \n", game->player_y, game->player_y-1);
            game->map[game->player_y][game->player_x] = '0';
            game->map[game->player_y--][game->player_x] = 'P';
            printf("nueva posición: game->player_y %d y game->player_y-1 %d \n", game->player_y, game->player_y-1);
            return (1);
        }
        else if  ((game->map[game->player_y-1][game->player_x] == '1') || ((game->map[game->player_y-1][game->player_x] == 'E') && (game->there_is_c != 0)))
            {
                printf("pared\n");
                return (0);
            }
        else if (game->map[game->player_y-1][game->player_x] == 'C')
        {
            game->there_is_c--;
            game->map[game->player_y][game->player_x] = '0';
            game->map[game->player_y--][game->player_x] = 'P';
        }
        else if ((game->map[game->player_y-1][game->player_x] == 'E') && (game->there_is_c == 0))
            write(1, "GAME OVER", 9);
    }
    return (0);
}

int check_down(t_game *game)
{
     while (game->map[game->player_y][game->player_x])
    {
        if (game->map[game->player_y+1][game->player_x] == '0')
        {
            printf("nueva posición: game->player_y %d y game->player_y+1 %d \n", game->player_y, game->player_y+1);
            game->map[game->player_y][game->player_x] = '0';
            game->map[game->player_y++][game->player_x] = 'P';
            printf("nueva posición: game->player_y %d y game->player_y+1 %d \n", game->player_y+1, game->player_y);
            return (1);
        }
        else if  ((game->map[game->player_y+1][game->player_x] == '1') || ((game->map[game->player_y+1][game->player_x] == 'E') && (game->there_is_c != 0)))
            {
                printf("pared\n");
                return (0);
            }
        else if (game->map[game->player_y+1][game->player_x] == 'C')
        {
            game->there_is_c--;
            game->map[game->player_y][game->player_x] = '0';
            game->map[game->player_y++][game->player_x] = 'P';
        }
        else if ((game->map[game->player_y+1][game->player_x] == 'E') && (game->there_is_c == 0))
            write(1, "GAME OVER", 9);
    }
    return (0);
}*/